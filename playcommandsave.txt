if (!message.member.voice.channel) return message.reply('Please join a voice channel first.');
		fs.readdir(__dirname + '\\assets', async (err, files) => {
			var sounds = [];
			for (var i = 0; i < files.length; i++) {
				sounds[i] = files[i].replace(/\.[^/.]+$/, '');
			}
			if (!sounds.includes(args[0]) && args[0] != 'custom' && args[0] != 'search') return message.reply('no');
			var connection = await message.member.voice.channel.join();
			var dispatcher;
			dispatcher.on('finish', () => {
				dispatcher.destroy();
				message.member.voice.channel.leave();
			});
			if (sounds.includes(args[0]) && message.member.voice.channel) {
				dispatcher = connection.play(__dirname + '\\assets\\' + args[0] + '.mp3');
			}
			else if (args[0] === 'custom' && message.member.voice.channel) {
				if (!validURL(args[1])) return message.reply('Please use a valid url.');
				if (args[1].includes('youtube.com')) {
					dispatcher = connection.play(ytdl(args[1], { filter: 'audioonly' }));
				}
				else {
					dispatcher = connection.play(args[1]);
				}
			}
			else if (args[0] == 'search') {
				var search = args;
				search.splice(0,1);
				var full = '';
				for (var p = 0; p < search.length; p++) {
					if (p != search.length - 1) full = full + search[p] + ' ';
					else full = full + search[p];
				}
				message.channel.send('Searching for ' + full + ' on youtube');
				var result = await ytsearch('AIzaSyCIXbD35QjyCvYTEpAwWxBzswTAFKy1zPw', {q: full, type: 'video'});
				message.channel.send('PLaying "'+result.items[0].snippet.title + '" By ' + result.items[0].snippet.channelTitle);
				var connection = await message.member.voice.channel.join();
				dispatcher = connection.play(ytdl('https://www.youtube.com/watch?v=' + result.items[0].id.videoId, { filter: 'audioonly' }));
			}
		});